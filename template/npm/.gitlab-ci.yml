stages:
  - package
  - release
  - deploy
#--------------------test环境----------------------
#打包
package-{{.Name}}-{{.Env}}:
  image: {{.Package.Image}}
  stage: package
  only:
    refs:
      - {{.OnlyRefs}}
  cache:
    untracked: true
    paths:
      - node_modules/
  script:
    - npm install --unsafe-perm
    - npm run {{.Env}}
    - cd dist
    - tar -czf web.tar.gz ./*
  artifacts:
    paths:
      - dist/web.tar.gz
#生成镜像
release-{{.Name}}-{{.Env}}:
  image: {{.Release.Image}}
  stage: release
  only:
    refs:
      - {{.OnlyRefs}}
  before_script:
    - docker login -u {{.Registry.Username}} -p {{.Registry.Password}} {{.Registry.Address}}
  script:
    - echo "<<<<<release-{{.Name}}>>>>>"
    - mv dist/web.tar.gz .devops/
    - cd .devops
    - docker build -t {{.Registry.Address}}/cotte-internal/{{.Namespace}}-{{.Name}}:$CI_PIPELINE_ID .
    - docker push {{.Registry.Address}}/cotte-internal/{{.Namespace}}-{{.Name}}:$CI_PIPELINE_ID
#部署
deploy-{{.Name}}-{{.Env}}:
  image: {{.Deploy.Image}}
  stage: deploy
  only:
    refs:
      - {{.OnlyRefs}}
  script:
    - deploy.sh --deploymentName={{.Name}} --namespace={{.Namespace}} --imageName={{.Registry.Address}}/cotte-internal/{{.Namespace}}-{{.Name}} --imageTag=$CI_PIPELINE_ID --yamlDir=.devops/yaml/{{.Env}}/deployment.yaml --containerName={{.Name}}
